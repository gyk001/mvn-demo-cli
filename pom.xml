<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>cn.com.sinosoft.ie.mvn</groupId>
		<artifactId>basic-cli</artifactId>
		<version>0.0.1.1-SNAPSHOT</version>
	</parent>
	<groupId>cn.com.sinosoft.ie.mvn</groupId>
	<artifactId>demo</artifactId>
	<build>
		<plugins>
			<!-- 执行命令：mvn package appassembler:assemble，会自动生成jar包并准备所需资源，bin目录下有可执行脚本 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.1.1</version>
				<configuration>
					<!-- 以下四句执行命令：mvn package appassembler:assemble，会自动在conf目录下生成配置文件 -->
					<configurationDirectory>conf</configurationDirectory>
					<configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
					<copyConfigurationDirectory>true</copyConfigurationDirectory>
					<includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
					<assembleDirectory>${project.build.runnableDir}</assembleDirectory>
					<extraJvmArguments>-Xms128m -Xmx256m</extraJvmArguments>
					<binFileExtensions>
						<unix>.sh</unix>
					</binFileExtensions>
					<platforms>
						<platform>windows</platform>
						<platform>unix</platform>
					</platforms>
					<repositoryName>lib</repositoryName>
					<programs>
						<program>
							<mainClass>cn.com.sinosoft.ie.aurora.common.main.Main</mainClass>
							<name>${project.artifactId}</name>
						</program>
					</programs>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
